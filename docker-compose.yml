
services:

  # React 前端和nginx服务
  client:
    restart: always
    build:
      context: ./client
    ports:
      - "8000:80"   # 将宿主机的 8000 端口映射到 Nginx 容器的 80 端口
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}  # Firebase API 配置
      - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
      - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
      - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
      - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
      - REACT_APP_FIREBASE_MEASUREMENT_ID=${REACT_APP_FIREBASE_MEASUREMENT_ID}
    depends_on:
      - server

  # Prisma 后端服务
  server:
    restart: always
    build:
      context: ./server
    environment:
      - DATABASE_URL=${DATABASE_URL}  # 数据库连接字符串
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
    volumes:
      - ./server:/app
    ports:
      - "3001:3001"
    depends_on:
      - db  # 确保数据库服务先启动
    command: ["sh", "-c", "npx prisma migrate dev --name init && npm run start"]  # 启动 Node.js 后端服务并运行数据库迁移

  # PostgreSQL 数据库服务
  db:
    restart: always
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}  # 数据库用户名
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # 数据库密码
      - POSTGRES_DB=${POSTGRES_DB}  # 数据库名称
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - "5432"  # 将数据库服务端口暴露给其他服务
volumes:
  db_data: {}  # 数据持久化卷